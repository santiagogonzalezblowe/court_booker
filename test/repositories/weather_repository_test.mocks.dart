// Mocks generated by Mockito 5.4.4 from annotations
// in court_booker_app/test/repositories/weather_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:court_booker_app/models/lat_lng_model.dart' as _i5;
import 'package:court_booker_app/models/weather_model.dart' as _i2;
import 'package:court_booker_app/repositories/weather_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherModel_0 extends _i1.SmartFake implements _i2.WeatherModel {
  _FakeWeatherModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  @override
  _i4.Future<_i2.WeatherModel> getWeather({
    required _i5.LatLngModel? latLng,
    required DateTime? dateTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [],
          {
            #latLng: latLng,
            #dateTime: dateTime,
          },
        ),
        returnValue: _i4.Future<_i2.WeatherModel>.value(_FakeWeatherModel_0(
          this,
          Invocation.method(
            #getWeather,
            [],
            {
              #latLng: latLng,
              #dateTime: dateTime,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.WeatherModel>.value(_FakeWeatherModel_0(
          this,
          Invocation.method(
            #getWeather,
            [],
            {
              #latLng: latLng,
              #dateTime: dateTime,
            },
          ),
        )),
      ) as _i4.Future<_i2.WeatherModel>);
}
